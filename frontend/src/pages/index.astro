---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import SketchSelect from '../components/SketchSelect.astro';
import {getAllQuotes,getSketchList} from "../sanity/api.js";
import {urlForImage} from '../sanity/urlForImage.js';

const quotes = await getAllQuotes();
const sketches = await getSketchList();
---

<Layout title="I Think You Should Leave Quote Database">
	<main>
		<h1 class="font-serif text-center text-4xl pt-5">I Think You Should Quote</h1>
		<h2 class="font-serif text-center text-lg pb-5">ITYSL Quote Database</h2>
		<div class="container mx-auto w-full max-w-3xl px-5">Search by Text:<br /><input placeholder="Search for ITYSL quotes..." id="searchTextbox" class="p-4 rounded-lg w-full mw-md text-black" /></div>
		<div class="container mx-auto w-full max-w-3xl px-5 mt-2">Search By Sketch:<br />
			<select name="sketches" id="sketches" class="p-4 rounded-lg w-full mw-md text-black">
				<option value="all" disabled selected>All Sketches</option>
				{sketches.map((sketch) => (
					<SketchSelect
						sketch={sketch}
					/>
				))}
			</select>
		</div>
		<ul id="resultDiv" class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 auto-rows-max">
			{quotes.map((quote: { charactername: string; quote: string; sketch: string; season: string; episode: string; characterimage: string; }) =>
				<Card
					quote={quote.quote}
					imgurl={urlForImage(quote.characterimage).width(600).url()}
					sketch={quote.sketch}
					season={quote.season}
					episode={quote.episode}
					character={quote.charactername}
				/>
			)}
		</ul>
	</main>
</Layout>

<script is:inline>
	// create a variable to store the timeout
    let timeout = undefined;

	//api call for text search
	async function fetchQuotesJSON(sq) {
		const nsearch = "https://7lpknm4h.apicdn.sanity.io/v2021-06-07/data/query/production?query="+sq;
		const response = await fetch(nsearch);
		const quotes = await response.json();
		return quotes;
	}

    // add an event listener to the textbox to detect when the user stops typing
    let st = document.getElementById('searchTextbox');
    if(st !== null){
        st.addEventListener('keyup', function() {
        	// clear the timeout if it is already set
            clearTimeout(timeout);
			//clear the results
			document.getElementById('resultDiv').innerHTML = '<i class="w-screen font-serif text-center text-lg pt-10 pb-10">Searching...</i>';

            // set the timeout to call the searchJson() function after 300 milliseconds
            timeout = setTimeout(function() {
				let newQ = `*[quote%20match%20"*${st.value}*"]%20|%20order(season%20asc,%20episode%20asc,%20sketch%20asc)`;
				fetchQuotesJSON(newQ).then(function(results) {
					if(results.result.length === 0){
						document.getElementById('resultDiv').innerHTML = '<i class="w-screen font-serif text-center text-lg pt-10 pb-10">No Results Found.<br /><img class="pt-2 pb-5 mx-auto px-5" src="/noresults.jpg" width="480" /></i>';
					} else{
						document.getElementById('resultDiv').innerHTML = '';
					}
					results.result.forEach(obj => {
						cutLink = obj.characterimage.asset._ref.slice(6).slice(0, -4);
						imgLink = "https://cdn.sanity.io/images/7lpknm4h/production/" + cutLink + ".jpg?w=600";
						if(obj.charactername === undefined){
							charname = '';
						} else {
							charname = " - " + obj.charactername;
						}
						document.getElementById('resultDiv').innerHTML += '<li class="p-5"><div class="rounded-lg p-5 bg-gray-800 h-full"><i>'+obj.sketch+'</i>, Season: '+obj.season+', Ep: '+obj.episode+'<br /><img src='+imgLink+' /><br /><div class="text-xl">"'+obj.quote+'"</div><div class="text-right pt-2">'+charname+'</div></div></li>';
					})
				})
            }, 1000);
        });
    }

	//api call for sketch search
	async function fetchSketchQuotesJSON(sq) {
		const nsearch = "https://7lpknm4h.apicdn.sanity.io/v2021-06-07/data/query/production?query="+sq;
		const response = await fetch(nsearch);
		const quotes = await response.json();
		return quotes;
	}

	//add an event listener for when the dropdown box selection is changed
	document.getElementById("sketches").addEventListener("change", searchBySketch);

	function searchBySketch() {
		var ddv = document.getElementById("sketches");
		let newQ = `*[sketch%20==%20"${ddv.value}"]`;
				fetchSketchQuotesJSON(newQ).then(function(results) {
					if(results.result.length === 0){
						document.getElementById('resultDiv').innerHTML = '<i class="w-screen font-serif text-center text-lg pt-10 pb-10">No Results Found.<br /><img class="pt-2 pb-5 mx-auto px-5" src="/noresults.jpg" width="480" /></i>';
					} else{
						document.getElementById('resultDiv').innerHTML = '';
					}
					results.result.forEach(obj => {
						cutLink = obj.characterimage.asset._ref.slice(6).slice(0, -4);
						imgLink = "https://cdn.sanity.io/images/7lpknm4h/production/" + cutLink + ".jpg?w=600";
						if(obj.charactername === undefined){
							charname = '';
						} else {
							charname = " - " + obj.charactername;
						}
						document.getElementById('resultDiv').innerHTML += '<li class="p-5"><div class="rounded-lg p-5 bg-gray-800 h-full"><i>'+obj.sketch+'</i>, Season: '+obj.season+', Ep: '+obj.episode+'<br /><img src='+imgLink+' /><br /><div class="text-xl">"'+obj.quote+'"</div><div class="text-right pt-2">'+charname+'</div></div></li>';
					})
				})
	}
</script>