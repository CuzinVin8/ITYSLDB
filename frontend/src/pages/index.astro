---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import SketchSelect from '../components/SketchSelect.astro';
import {getAllQuotes,getSketchList} from "../sanity/api.js";
import {urlForImage} from '../sanity/urlForImage.js';

const quotes = await getAllQuotes();
const sketches = await getSketchList();
---

<Layout title="I Think You Should Leave Quote Database">
	<main>
		<a href="https://ithinkyoushouldquote.me"><h1 class="font-serif text-center text-4xl pt-5">I Think You Should Quote</h1></a>
		<h2 class="font-serif text-center text-lg pb-6">ITYSL Quote Database</h2>
		<div id="intro" class="text-center w-full mw-md max-w-3xl mx-auto py-4 px-3">
			<p class="text-xl font-serif pb-3">"It's so funny. I just can't remember, like... how to search for it."</p>Welcome to the searchable "I Think You Should Leave" quote database where you'll have an easier time 'searching for it'. Enjoy the hand-selected quotes below or search for a specific quote in the search bar. You can switch to searching by sketch using a dropdown and get all the hilarious quotes from your favorite sketch. Click on any quote text to copy it to your clipboard instantly or use the download icon to save a quote image card to share.
		</div>
		<div id="textsearch" class="container mx-auto w-full max-w-3xl px-4 sm:px-3 mt-2 pb-2"><span class="font-serif text-lg">Search by Text:</span><br /><input placeholder="Search for ITYSL quotes..." id="searchTextbox" class="inline-block p-4 rounded-l-lg w-8/12 lg:w-10/12 mw-md text-black" /><button id="submitSearch" class="inline-block p-4 w-4/12 lg:w-2/12 text-black rounded-r-lg bg-amber-300 hover:bg-amber-400 ease-in duration-200 font-serif">Submit</button>
			<br />
			<div class="text-center text-sm pt-1"><a href="" id="switchToSketch" class="text-slate-300 hover:text-amber-300 ease-in duration-200">Switch to Search by Sketch?</a></div>
		</div>
		<div id="sketchsearch" class="hidden container mx-auto w-full max-w-3xl px-4 sm:px-3 mt-2 pb-2"><span class="font-serif text-lg">Search By Sketch:</span><br />
			<select name="sketches" id="sketches" class="p-4 rounded-lg w-full mw-md text-black" style="height:56px!important;">
				<option value="all" disabled selected>All Sketches</option>
				{sketches.map((sketch) => (
					<SketchSelect
						sketch={sketch}
					/>
				))}
			</select>
			<br />
			<div class="text-center text-sm pt-1"><a href="" id="switchToText" class="text-slate-300 hover:text-amber-300 ease-in duration-200">Switch to Text Search?</a></div>
		</div>
		<ul id="resultDiv" class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 auto-rows-max max-w-screen-2xl mx-auto">
			{quotes.map((quote: { charactername: string; quote: string; sketch: string; season: string; episode: string; characterimage: string; _id: string }) =>
				<Card
					quote={quote.quote}
					imgurl={urlForImage(quote.characterimage).width(700).url()}
					sketch={quote.sketch}
					season={quote.season}
					episode={quote.episode}
					character={quote.charactername}
					idkey={quote._id}
				/>
			)}
		</ul>
	</main>
</Layout>
<script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js" integrity="sha512-BNaRQnYJYiPSqHHDb58B0yaPfCu+Wgds8Gp/gU33kqBtgNS4tSPHuGibyoeqMV/TJlSKda6FXzoEyYGjTe+vXA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script is:inline>
	// create a variable to store the timeout
    let timeout = undefined;

	//api call for text search
	async function fetchQuotesJSON(sq) { 
		const nsearch = "https://7lpknm4h.api.sanity.io/v2021-06-07/data/query/production?query="+sq;
		const response = await fetch(nsearch);
		const quotes = await response.json();
		return quotes;
	}

    // add an event listener to the textbox to detect when the user submits search
    let sb = document.getElementById('submitSearch');
	let st = document.getElementById('searchTextbox');
    if((sb !== null) && (st !== null)){

		st.addEventListener("keypress", function(event) {
		// If the user presses the "Enter" key on the keyboard
		if (event.key === "Enter") {
			// Cancel the default action, if needed
			event.preventDefault();
			// Trigger the search submit with a click
			sb.click();
		}
		});

        sb.addEventListener('click', function() {
			//clear the results
			document.getElementById('resultDiv').innerHTML = '<i class="w-screen font-serif text-center text-lg pt-10 pb-10">Searching...</i>';
			document.getElementById('intro').style.display = 'none';
			let newQ = `*[quote%20match%20"*${st.value}*"]%20|%20order(season%20asc,%20episode%20asc,%20timestamp%20asc)`;
			fetchQuotesJSON(newQ).then(function(results) {
				if(results.result.length === 0){
					document.getElementById('resultDiv').innerHTML = '<i class="w-screen font-serif text-center text-lg pt-10 pb-10">No Results Found.<br /><img class="pt-2 pb-5 mx-auto px-5" src="/noresults.jpg" width="480" /></i>';
				} else{
					document.getElementById('resultDiv').innerHTML = '';
				}
				results.result.forEach(obj => {
					cutLink = obj.characterimage.asset._ref.slice(6).slice(0, -4);
					imgLink = "https://cdn.sanity.io/images/7lpknm4h/production/" + cutLink + ".jpg?w=700";
					if(obj.charactername === undefined){
						charname = '';
					} else {
						charname = " - " + obj.charactername;
					}
					let alt = obj.quote.substring(0, 100);
					document.getElementById('resultDiv').innerHTML += '<li class="px-0 py-3 sm:p-3 md:p-4"><div class="rounded-lg px-4 sm:px-5 pt-5 pb-14 bg-gray-800 h-full" id='+obj._id+'><div class="mb-1.5" data-html2canvas-ignore="true"><i>'+obj.sketch+'</i>, Season: '+obj.season+', Ep: '+obj.episode+'</div><img src='+imgLink+' alt="'+alt+'" /><br /><h3 class="text-xl quoteText cursor-copy selection:bg-amber-300 selection:text-black">'+obj.quote+'</h3><div class="text-right pt-2" data-html2canvas-ignore="true">'+charname+'</div></div><section class="-mt-10 ml-5"><img class="downloadImg cursor-pointer" src="/download.svg" height="24" alt="download quote card image" title="download quote card image" /></section></li>';
				})
				newResults();
			})
        });
    }

	//api call for sketch search
	async function fetchSketchQuotesJSON(sq) {
		const nsearch = "https://7lpknm4h.api.sanity.io/v2021-06-07/data/query/production?query="+sq;
		const response = await fetch(nsearch);
		const quotes = await response.json();
		return quotes;
	}

	//add an event listener for when the dropdown box selection is changed
	document.getElementById("sketches").addEventListener("change", searchBySketch);

	function searchBySketch() {
		var ddv = document.getElementById("sketches");
		document.getElementById('intro').style.display = 'none';
		let newQ = `*[sketch%20==%20"${ddv.value}"]%20|%20order(timestamp%20asc)`;
				fetchSketchQuotesJSON(newQ).then(function(results) {
					if(results.result.length === 0){
						document.getElementById('resultDiv').innerHTML = '<i class="w-screen font-serif text-center text-lg pt-10 pb-10">No Results Found.<br /><img class="pt-2 pb-5 mx-auto px-5" src="/noresults.jpg" width="480" /></i>';
					} else{
						document.getElementById('resultDiv').innerHTML = '';
					}
					results.result.forEach(obj => {
						cutLink = obj.characterimage.asset._ref.slice(6).slice(0, -4);
						imgLink = "https://cdn.sanity.io/images/7lpknm4h/production/" + cutLink + ".jpg?w=700";
						if(obj.charactername === undefined){
							charname = '';
						} else {
							charname = " - " + obj.charactername;
						}
						let alt = obj.quote.substring(0, 100);
						document.getElementById('resultDiv').innerHTML += '<li class="px-0 py-3 sm:p-3 md:p-4"><div class="rounded-lg px-4 sm:px-5 pt-5 pb-14 bg-gray-800 h-full" id='+obj._id+'><div class="mb-1.5" data-html2canvas-ignore="true"><i>'+obj.sketch+'</i>, Season: '+obj.season+', Ep: '+obj.episode+'</div><img src='+imgLink+' alt="'+alt+'" /><br /><h3 class="text-xl quoteText cursor-copy selection:bg-amber-300 selection:text-black">'+obj.quote+'</h3><div class="text-right pt-2" data-html2canvas-ignore="true">'+charname+'</div></div><section class="-mt-10 ml-5"><img class="downloadImg cursor-pointer" src="/download.svg" height="24" alt="download quote card image" title="download quote card image" /></section></li>';
					})
					newResults();
				})
	}

	//toggles for search type visibility
	document.getElementById('switchToSketch').addEventListener('click', (event) => {
		event.preventDefault();
		showSketch();
    });

	document.getElementById('switchToText').addEventListener('click', (event) => {
		event.preventDefault();
		showText();
    });

	function showText(){
		document.getElementById('searchTextbox').value = '';
		document.getElementById('textsearch').style.display = 'block'; 
		document.getElementById('sketchsearch').style.display = 'none'; 
	}
	function showSketch(){
		document.getElementById('sketches').value='all';
		document.getElementById('textsearch').style.display = 'none'; 
		document.getElementById('sketchsearch').style.display = 'block'; 
	}

	//function to add click actions to all result cards
	function newResults(){
		//click to copy quotes
		let btnprod = document.getElementsByClassName("quoteText");

		// When the user clicks on the button, open the modal 
		for (var i = 0; i < btnprod.length; i++) {
			btnprod[i].onclick = function(event) {
				window.getSelection().selectAllChildren(event.target)
				navigator.clipboard.writeText(this.textContent);
				/* reveal message that it was copied */
				let cbShow = document.getElementById('clipboardText');
				let cbH = document.getElementById('msgHolder');
				cbH.style.marginTop = "0px";
				cbShow.style.opacity = "1";
				setTimeout(() => {  //timeout to hide message again
					cbH.style.marginTop = "-9000px";
					cbShow.style.opacity = "0";
				}, 2000)
			}
		}

		//html2canvas save to device
		function saveAs(uri, filename) {
			var link = document.createElement('a');
			if (typeof link.download === 'string') {
				link.href = uri;
				link.download = filename;
				//Firefox requires the link to be in the body
				document.body.appendChild(link);
				//simulate click
				link.click();
				//remove the link when done
				document.body.removeChild(link);
			} else {
				window.open(uri);
			}
		}

		//random string generator
		function makeid(length) {
			var result           = '';
			var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
			var charactersLength = characters.length;
			for ( var i = 0; i < length; i++ ) {
				result += characters.charAt(Math.floor(Math.random() * charactersLength));
			}
			return result;
		}

		//click to download meme
		let btndl = document.getElementsByClassName("downloadImg");

		for (var i = 0; i < btndl.length; i++) {
			btndl[i].onclick = function(event) {
				let pn = this.parentNode.previousElementSibling.id;
				html2canvas(document.getElementById(pn),{useCORS: true,allowTaint: true,backgroundColor:null,}).then(function(canvas) {
					saveAs(canvas.toDataURL(), 'itysq_'+makeid(9)+'.png');
				});
			}
		}
	}
	newResults();
	
</script>